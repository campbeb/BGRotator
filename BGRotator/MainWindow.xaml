<Window
    x:Class="BGRotator.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BGRotator"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Properties="clr-namespace:BGRotator.Properties"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"

    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"

    Width="607"
    Height="487"
    Icon="BGRotator.ico"
    ResizeMode="CanMinimize"
    Title="BGRotator"
    WindowStartupLocation="CenterScreen"
    FontSize="13"
    mc:Ignorable="d">
    <Grid>
        <Button
            x:Name="buttonOK" Width="75"
            HorizontalAlignment="Left"
            Margin="480,363,0,0"
            VerticalAlignment="Top"
            Click="ButtonOK_Click"
            Content="OK"
            IsDefault="True"
            TabIndex="17" />
        <Button
            x:Name="buttonCancel" Width="75"
            HorizontalAlignment="Left"
            Margin="363,363,0,0"
            VerticalAlignment="Top"
            Click="ButtonCancel_Click"
            Content="Cancel"
            IsCancel="True"
            TabIndex="16" />
        <Label
            x:Name="labelWallpapers"
            HorizontalAlignment="Left"
            Margin="16,10,0,0"
            VerticalAlignment="Top"
            Content="Display wallpapers from:"
            TabIndex="1" />
        <TextBox
            x:Name="textBoxWallpaperDir" Width="403"
            Background="{DynamicResource PrimaryHueLightBrush}"
            Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
            HorizontalAlignment="Left"
            Margin="35,39,0,0"
            VerticalAlignment="Top"
            Padding="3"
            Style="{StaticResource textBoxInError}"
            TabIndex="2"
            TextWrapping="Wrap"
            ToolTip="Directory with wallpapers to display" Height="24">
            <TextBox.Text>
                <Binding
                    Mode="TwoWay"
                    Path="wallpaperDir"
                    Source="{x:Static Properties:Settings.Default}"
                    UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:DirectoryExistsRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button
            x:Name="buttonBrowseWallpaperDir" Width="104"
            HorizontalAlignment="Left"
            Margin="455,35,0,0"
            VerticalAlignment="Top"
            Click="ButtonBrowseWallpaperDir_Click"
            Content="Browse..."
            TabIndex="3" />
        <Label
            x:Name="labelRotate"
            HorizontalAlignment="Left"
            Margin="304,309,0,0"
            VerticalAlignment="Top"
            Content="Change wallpaper every" />
        <xctk:IntegerUpDown
            x:Name="updownRotate" Width="62"
            Background="{DynamicResource PrimaryHueLightBrush}"
            Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
            HorizontalAlignment="Left"
            Margin="456,312,0,0"
            VerticalAlignment="Top"
            FormatString="N0"
            Increment="1"
            Maximum="525600"
            Minimum="1"
            TabIndex="15"
            Value="{Binding rotateInterval, Mode=TwoWay, Source={x:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}">
            <xctk:IntegerUpDown.BindingGroup>
                <BindingGroup Name="rotateInterval" />
            </xctk:IntegerUpDown.BindingGroup>
        </xctk:IntegerUpDown>
        <Label
            x:Name="labelMinutes"
            HorizontalAlignment="Left"
            Margin="521,310,0,0"
            VerticalAlignment="Top"
            Content="minutes" />
        <Label
            x:Name="labelFavorites"
            HorizontalAlignment="Left"
            Margin="92,72,0,0"
            VerticalAlignment="Top"
            Content="favorites to:"
            TabIndex="4" />
        <TextBox
            x:Name="textBoxFavoritesDir" Width="403"
            Background="{DynamicResource PrimaryHueLightBrush}"
            Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
            HorizontalAlignment="Left"
            Margin="35,104,0,0"
            VerticalAlignment="Top"
            Padding="3"
            Style="{StaticResource textBoxInError}"
            TabIndex="5"
            TextWrapping="Wrap"
            ToolTip="Directory where favorites will be moved or copied" Height="24">
            <TextBox.Text>
                <Binding
                    Mode="TwoWay"
                    Path="favoritesDir"
                    Source="{x:Static Properties:Settings.Default}"
                    UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:DirectoryExistsRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button
            x:Name="buttonBrowseFavoritesDir" Width="104"
            HorizontalAlignment="Left"
            Margin="455,100,0,0"
            VerticalAlignment="Top"
            Click="ButtonBrowseFavoritesDir_Click"
            Content="Browse..."
            TabIndex="6" />
        <Label
            x:Name="labelTrash"
            HorizontalAlignment="Left"
            Margin="91,137,0,0"
            VerticalAlignment="Top"
            Content="trash to:"
            TabIndex="7" />
        <Button
            x:Name="buttonBrowseTrashDir" Width="104"
            HorizontalAlignment="Left"
            Margin="455,165,0,0"
            VerticalAlignment="Top"
            Click="ButtonBrowseTrashDir_Click"
            Content="Browse..."
            TabIndex="9" />
        <TextBox
            x:Name="textBoxTrashDir" Width="403"
            Background="{DynamicResource PrimaryHueLightBrush}"
            Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
            HorizontalAlignment="Left"
            Margin="35,169,0,0"
            VerticalAlignment="Top"
            Padding="3"
            Style="{StaticResource textBoxInError}"
            TabIndex="8"
            TextWrapping="Wrap"
            ToolTip="Directory where trash will be moved or copied" Height="24">
            <TextBox.Text>
                <Binding
                    Mode="TwoWay"
                    Path="trashDir"
                    Source="{x:Static Properties:Settings.Default}"
                    UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:DirectoryExistsRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Label
            x:Name="labelNextHokey" Width="36" Height="28"
            HorizontalAlignment="Left"
            Margin="22,247,0,0"
            VerticalAlignment="Top"
            Content="Next" />
        <Label
            x:Name="labelFavoriteHotkey"
            HorizontalAlignment="Left"
            Margin="22,292,0,0"
            VerticalAlignment="Top"
            Content="Favorite" />
        <Label
            x:Name="labelTrashHotkey"
            HorizontalAlignment="Left"
            Margin="22,338,0,0"
            VerticalAlignment="Top"
            Content="Trash" />
        <Button
            x:Name="buttonNextHotkey" Width="64"
            HorizontalAlignment="Left"
            Margin="80,244,0,0"
            VerticalAlignment="Top"
            Click="ButtonNextHotkey_Click"
            Content="Set"
            TabIndex="10"
            ToolTip="Click to set hotkey for Next Wallpaper" />
        <Button
            x:Name="buttonFavoriteHotkey" Width="64"
            HorizontalAlignment="Left"
            Margin="80,288,0,0"
            VerticalAlignment="Top"
            Click="ButtonFavoriteHotkey_Click"
            Content="Set"
            TabIndex="11"
            ToolTip="Click to set hotkey for Favorite Wallpaper" />
        <Button
            x:Name="buttonTrashHotkey" Width="64"
            HorizontalAlignment="Left"
            Margin="80,333,0,0"
            VerticalAlignment="Top"
            Click="ButtonTrashHotkey_Click"
            Content="Set"
            TabIndex="12"
            ToolTip="Click to set hotkey for Trash Wallpaper" />
        <Label
            x:Name="labelNextHotkeyKeys"
            HorizontalAlignment="Left"
            Margin="162,245,0,0"
            VerticalAlignment="Top"
            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
            BorderThickness="1"
            Content="hotkeys" />
        <Label
            x:Name="labelFavoriteHotkeyKeys"
            HorizontalAlignment="Left"
            Margin="162,292,0,0"
            VerticalAlignment="Top"
            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
            BorderThickness="1"
            Content="hotkeys" />
        <Label
            x:Name="labelTrashHotkeyKeys"
            HorizontalAlignment="Left"
            Margin="162,338,0,0"
            VerticalAlignment="Top"
            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
            BorderThickness="1"
            Content="hotkeys" />
        <CheckBox
            x:Name="checkBoxNextOnFavorite"
            HorizontalAlignment="Left"
            Margin="335,248,0,0"
            VerticalAlignment="Top"
            Content="Change wallpaper after Favorite"
            IsChecked="{Binding nextOnFavorite, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
            TabIndex="13" />
        <CheckBox
            x:Name="checkBoxNextOnTrash"
            HorizontalAlignment="Left"
            Margin="335,277,0,0"
            VerticalAlignment="Top"
            Content="Change wallpaper after Trash"
            IsChecked="{Binding nextOnTrash, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
            TabIndex="14" />
        <ComboBox
            x:Name="comboBoxFavorite" Width="67"
            HorizontalAlignment="Left"
            Margin="22,70,0,0"
            VerticalAlignment="Top"
            SelectedIndex="{Binding moveOrCopyOnFavorite, Mode=TwoWay, Source={x:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
            ToolTip="Select whether to Move or Copy favorites">
            <ComboBoxItem Content="Move" />
            <ComboBoxItem Content="Copy" />
        </ComboBox>
        <ComboBox
            x:Name="comboBoxTrash" Width="67"
            HorizontalAlignment="Left"
            Margin="22,135,0,0"
            VerticalAlignment="Top"
            SelectedIndex="{Binding moveOrCopyOnTrash, Mode=TwoWay, Source={x:Static Properties:Settings.Default}, UpdateSourceTrigger=PropertyChanged}"
            ToolTip="Select whether to Move or Copy trash">
            <ComboBoxItem Content="Move" />
            <ComboBoxItem Content="Copy" />
        </ComboBox>
        <ComboBox x:Name="primaryColorComboBox"
                  HorizontalAlignment="Left"
                  Margin="162,397,0,0"
                  VerticalAlignment="Top"
                  Width="120"
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  ItemsSource="{Binding Path=PrimaryColorSwatches}"
                  SelectedValue="{Binding primaryColor, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
                  SelectedValuePath="Name"
                  materialDesign:HintAssist.Hint="(Primary Color)"
                  SelectionChanged="PrimaryColorComboBox_SelectionChanged">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{Binding ExemplarHue.Color, Mode=OneTime}" />
                        </TextBlock.Foreground>

                    </TextBlock>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
        </ComboBox>
        <StackPanel Orientation="Horizontal" Margin="22,403,449.8,14.6">
            <TextBlock VerticalAlignment="Center">Light</TextBlock>
            <ToggleButton x:Name="lightDarkToggleButton" Margin="8 0 16 0"
                          IsChecked="{Binding useDarkBackground, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
                          Checked="LightDarkToggleButton_Checked"
                          Unchecked="LightDarkToggleButton_Unchecked" />
            <TextBlock VerticalAlignment="Center">Dark</TextBlock>
        </StackPanel>
        <ComboBox x:Name="accentColorComboBox"
        	HorizontalAlignment="Left"
        	Margin="304,392,0,0"
        	VerticalAlignment="Top"
        	Width="120"
        	Style="{StaticResource MaterialDesignFloatingHintComboBox}"
        	ItemsSource="{Binding AccentColorSwatches}"
        	SelectedValue="{Binding accentColor, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
        	SelectedValuePath="Name"
        	materialDesign:HintAssist.Hint="(Accent Color)"
        	SelectionChanged="AccentColorComboBox_SelectionChanged" Visibility="Hidden" >
            <!--        	DisplayMemberPath="Name"-->
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{Binding AccentExemplarHue.Color, Mode=OneTime}" />
                        </TextBlock.Foreground>

                    </TextBlock>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
        </ComboBox>
        <Border 
            BorderBrush="{DynamicResource MaterialDesignDivider}"
            BorderThickness="3" 
            HorizontalAlignment="Left" 
            Height="154" 
            Margin="16,228,0,0" 
            VerticalAlignment="Top" 
            Width="283"/>
        <TextBlock 
            HorizontalAlignment="Left"
            Margin="18,211,0,0" 
            VerticalAlignment="Top"
            Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Hotkeys"
            />
    </Grid>
</Window>